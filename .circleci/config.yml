version: 2.1

jobs:
  build_and_test:
    docker:
      - image: cimg/node:18.19
    steps:
      - checkout

      # Optional: Install any root-level dependencies if needed
      - run:
          name: Install Root Dependencies (if any)
          command: |
            if [ -f package.json ]; then npm install; else echo "No root package.json found, skipping."; fi

      # Build and test the backend
      - run:
          name: Build Backend
          command: |
            cd server
            npm install
            npm install -g typescript
            npm run build

      # Build and test the frontend
      - run:
          name: Build Frontend
          command: |
            cd client
            npm install
            npm run build -- --configuration=production

      # Archive backend files for deployment
      - run:
          name: Archive Backend Files
          command: |
            cd server
            zip -r backend.zip .
      - persist_to_workspace:
          root: .
          paths:
            - server/backend.zip
            - client/dist/spicestory

  deploy:
    docker:
      - image: amazon/aws-cli
    steps:
      - checkout
      - attach_workspace:
          at: .
      - run:
          name: Configure AWS Credentials
          command: |
            mkdir -p ~/.aws
            echo "[default]" > ~/.aws/config
            echo "aws_access_key_id=$AWS_ACCESS_KEY_ID" >> ~/.aws/config
            echo "aws_secret_access_key=$AWS_SECRET_ACCESS_KEY" >> ~/.aws/config
            echo "region=$AWS_REGION" >> ~/.aws/config

      # Deploy backend to Elastic Beanstalk
      - run:
          name: Deploy Backend to Elastic Beanstalk
          command: |
            cd server
            eb init SpiceStory-Server --platform "Node.js 18 running on 64bit Amazon Linux" --region $AWS_REGION
            eb setenv AWS_ACCESS_KEY_ID=$AWS_ACCESS_KEY_ID \
                      AWS_SECRET_ACCESS_KEY=$AWS_SECRET_ACCESS_KEY \
                      AWS_REGION=$AWS_REGION \
                      DB_HOST=$DB_HOST \
                      DB_NAME=$DB_NAME \
                      DB_USER=$DB_USER \
                      DB_PASSWORD=$DB_PASSWORD \
                      DB_PORT=$DB_PORT \
                      JWT_SECRET=$JWT_SECRET \
                      PORT=$PORT
            nohup eb deploy SpiceStory-env & 
            echo "Waiting for EB deployment to complete..."
            TIMEOUT=1800
            INTERVAL=30
            ELAPSED=0
            while true; do
              STATUS=$(eb health SpiceStory-env | grep -i "Green")
              if [ -n "$STATUS" ]; then
                echo "✅ Elastic Beanstalk environment is healthy."
                break
              fi
              if [ $ELAPSED -ge $TIMEOUT ]; then
                echo "❌ Timeout reached ($TIMEOUT seconds). Exiting."
                exit 1
              fi
              echo "Checking health again in ${INTERVAL}s..."
              sleep $INTERVAL
              ELAPSED=$((ELAPSED + INTERVAL))
            done

      # Deploy frontend to S3
      - run:
          name: Deploy Frontend to S3
          command: |
            aws s3 sync client/dist/spicestory s3://$FRONTEND_S3_BUCKET --delete

workflows:
  build_and_deploy:
    jobs:
      - build_and_test:
          filters:
            branches:
              only: main
      - deploy:
          requires:
            - build_and_test
          filters:
            branches:
              only: main