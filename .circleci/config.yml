version: 2.1

# Define "build_and_test"
jobs:
  build_and_test:
    docker:
      - image: cimg/node:18.19
    steps:
      - checkout

      # Install root-level dependencies 
      - run:
          name: Install root dependencies 2
          command: |
            npm install || echo "No root-level package.json found, skipping."

      # Build & Test the Backend
      - run:
          name: Backend install and build
          command: |
            cd server
            npm install
            npm run build

      # Build & Test the Frontend
      - run:
          name: Frontend install and build
          command: |
            cd client
            npm install
            npm run build -- --configuration=production

  # Define deployment job
  deploy:
    docker:
      - image: amazon/aws-cli  
    steps:
      - checkout

      # Install required dependencies (jq)
      - run:
          name: Install dependencies
          command: |
            yum install -y jq

      # Set AWS Credentials
      - run:
          name: Configure AWS Credentials
          command: |
            mkdir -p ~/.aws
            echo "[default]" > ~/.aws/credentials
            echo "aws_access_key_id=$AWS_ACCESS_KEY_ID" >> ~/.aws/credentials
            echo "aws_secret_access_key=$AWS_SECRET_ACCESS_KEY" >> ~/.aws/credentials
            echo "[default]" > ~/.aws/config
            echo "region=$AWS_REGION" >> ~/.aws/config

      # Create Environment Variables JSON File
      - run:
          name: Create environment variables file
          command: |
            echo '[{"Namespace":"aws:elasticbeanstalk:application:environment","OptionName":"DB_HOST","Value":"'"$DB_HOST"'"},
                  {"Namespace":"aws:elasticbeanstalk:application:environment","OptionName":"DB_NAME","Value":"'"$DB_NAME"'"},
                  {"Namespace":"aws:elasticbeanstalk:application:environment","OptionName":"DB_USER","Value":"'"$DB_USER"'"},
                  {"Namespace":"aws:elasticbeanstalk:application:environment","OptionName":"DB_PASSWORD","Value":"'"$DB_PASSWORD"'"},
                  {"Namespace":"aws:elasticbeanstalk:application:environment","OptionName":"JWT_SECRET","Value":"'"$JWT_SECRET"'"},
                  {"Namespace":"aws:elasticbeanstalk:application:environment","OptionName":"PORT","Value":"'"$PORT"'"}]' > env.json

      # Set environment variables for Elastic Beanstalk
      - run:
          name: Set Environment Variables in Elastic Beanstalk
          command: |
            aws elasticbeanstalk update-environment --environment-name SpiceStory-env \
              --application-name SpiceStory-Server \
              --region $AWS_REGION \
              --option-settings file://env.json &  
            disown  

      # Deploy Backend to Elastic Beanstalk
      - run:
          name: Deploy to AWS Elastic Beanstalk
          command: |
            cd server
            zip -r deploy.zip .
            aws elasticbeanstalk create-application-version --application-name SpiceStory-Server \
              --version-label "deploy-$(date +%s)" --source-bundle S3Bucket=$FRONTEND_S3_BUCKET,S3Key=deploy.zip
            aws elasticbeanstalk update-environment --environment-name SpiceStory-env --version-label "deploy-$(date +%s)"

      # Deploy Frontend to S3
      - run:
          name: Deploy Frontend to S3
          command: |
            aws s3 sync client/dist/spicestory s3://$FRONTEND_S3_BUCKET --delete

# Define workflow
workflows:
  version: 2
  build_and_deploy:
    jobs:
      - build_and_test
      - deploy:
          requires:
            - build_and_test
          filters:
            branches:
              only: main